# Production Disaster Management System - Lightweight Version
# Optimized Docker image without heavy ML dependencies

FROM python:3.11-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_DEFAULT_TIMEOUT=100

# Set work directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first and install in stages to avoid timeouts
COPY requirements.txt .

# Install basic dependencies first (smaller packages)
RUN pip install --no-cache-dir \
    requests>=2.31.0 \
    urllib3>=2.0.0 \
    beautifulsoup4>=4.12.0 \
    fastapi>=0.104.0 \
    uvicorn[standard]>=0.24.0 \
    pydantic>=2.4.0 \
    pandas>=2.1.0 \
    numpy>=1.24.0 \
    geopy>=2.4.0 \
    lxml>=4.9.0 \
    python-multipart>=0.0.6 \
    python-dotenv>=1.0.0

# Install ML dependencies separately with timeout handling
RUN pip install --no-cache-dir --timeout 300 \
    scikit-learn>=1.3.0 \
    Pillow>=10.0.0 || \
    pip install --no-cache-dir --timeout 600 \
    scikit-learn>=1.3.0 \
    Pillow>=10.0.0

# Skip heavy ML packages for lightweight version
# torch, transformers, sentencepiece will use CPU-only fallbacks
RUN echo "Skipping heavy ML packages for lightweight Docker build"

# Copy project files
COPY . .

# Create non-root user for security
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Create directories for logs and cache
RUN mkdir -p logs models/.cache && \
    chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8000

# Health check for API
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Run the API server
CMD ["uvicorn", "api_server:app", "--host", "0.0.0.0", "--port", "8000"]