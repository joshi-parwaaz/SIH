version: '3.8'

services:
  # Model A ML Service
  model-a-ml:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ocean-hazard-model-a
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - MODEL_ENV=production
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - MONGODB_URL=mongodb://mongodb:27017
      - DATABASE_NAME=ocean_hazard_platform
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./models:/app/models
      - ./config:/app/config
    depends_on:
      - mongodb
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: ocean-hazard-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
      - MONGO_INITDB_DATABASE=ocean_hazard_platform
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: ocean-hazard-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: ocean-hazard-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - model-a-ml
    restart: unless-stopped

volumes:
  mongodb_data:
  redis_data:

networks:
  default:
    name: ocean-hazard-network